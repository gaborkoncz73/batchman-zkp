// Generated from prolog.g4 by ANTLR 4.13.2
#![allow(dead_code)]
#![allow(nonstandard_style)]
#![allow(unused_imports)]
#![allow(unused_variables)]
use antlr4rust::atn::ATN;
use antlr4rust::char_stream::CharStream;
use antlr4rust::int_stream::IntStream;
use antlr4rust::tree::ParseTree;
use antlr4rust::lexer::{BaseLexer, Lexer, LexerRecog};
use antlr4rust::atn_deserializer::ATNDeserializer;
use antlr4rust::dfa::DFA;
use antlr4rust::lexer_atn_simulator::{LexerATNSimulator, ILexerATNSimulator};
use antlr4rust::PredictionContextCache;
use antlr4rust::recognizer::{Recognizer,Actions};
use antlr4rust::error_listener::ErrorListener;
use antlr4rust::TokenSource;
use antlr4rust::token_factory::{TokenFactory,CommonTokenFactory,TokenAware};
use antlr4rust::token::*;
use antlr4rust::rule_context::{BaseRuleContext,EmptyCustomRuleContext,EmptyContext};
use antlr4rust::parser_rule_context::{ParserRuleContext,BaseParserRuleContext,cast};
use antlr4rust::vocabulary::{Vocabulary,VocabularyImpl};

use antlr4rust::{lazy_static,Tid,TidAble,TidExt};

use std::sync::Arc;
use std::cell::RefCell;
use std::rc::Rc;
use std::marker::PhantomData;
use std::ops::{Deref, DerefMut};


	pub const T__0:i32=1; 
	pub const T__1:i32=2; 
	pub const T__2:i32=3; 
	pub const T__3:i32=4; 
	pub const T__4:i32=5; 
	pub const T__5:i32=6; 
	pub const T__6:i32=7; 
	pub const T__7:i32=8; 
	pub const T__8:i32=9; 
	pub const T__9:i32=10; 
	pub const T__10:i32=11; 
	pub const T__11:i32=12; 
	pub const T__12:i32=13; 
	pub const T__13:i32=14; 
	pub const T__14:i32=15; 
	pub const T__15:i32=16; 
	pub const T__16:i32=17; 
	pub const T__17:i32=18; 
	pub const T__18:i32=19; 
	pub const T__19:i32=20; 
	pub const T__20:i32=21; 
	pub const T__21:i32=22; 
	pub const T__22:i32=23; 
	pub const T__23:i32=24; 
	pub const T__24:i32=25; 
	pub const T__25:i32=26; 
	pub const T__26:i32=27; 
	pub const T__27:i32=28; 
	pub const T__28:i32=29; 
	pub const T__29:i32=30; 
	pub const T__30:i32=31; 
	pub const T__31:i32=32; 
	pub const T__32:i32=33; 
	pub const T__33:i32=34; 
	pub const T__34:i32=35; 
	pub const T__35:i32=36; 
	pub const T__36:i32=37; 
	pub const T__37:i32=38; 
	pub const T__38:i32=39; 
	pub const T__39:i32=40; 
	pub const T__40:i32=41; 
	pub const T__41:i32=42; 
	pub const T__42:i32=43; 
	pub const T__43:i32=44; 
	pub const T__44:i32=45; 
	pub const T__45:i32=46; 
	pub const T__46:i32=47; 
	pub const T__47:i32=48; 
	pub const T__48:i32=49; 
	pub const T__49:i32=50; 
	pub const T__50:i32=51; 
	pub const T__51:i32=52; 
	pub const LETTER_DIGIT:i32=53; 
	pub const VARIABLE:i32=54; 
	pub const DECIMAL:i32=55; 
	pub const BINARY:i32=56; 
	pub const OCTAL:i32=57; 
	pub const HEX:i32=58; 
	pub const CHARACTER_CODE_CONSTANT:i32=59; 
	pub const FLOAT:i32=60; 
	pub const GRAPHIC_TOKEN:i32=61; 
	pub const QUOTED:i32=62; 
	pub const DOUBLE_QUOTED_LIST:i32=63; 
	pub const BACK_QUOTED_STRING:i32=64; 
	pub const WS:i32=65; 
	pub const COMMENT:i32=66; 
	pub const MULTILINE_COMMENT:i32=67;
	pub const channelNames: [&'static str;0+2] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	];

	pub const modeNames: [&'static str;1] = [
		"DEFAULT_MODE"
	];

	pub const ruleNames: [&'static str;84] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "LETTER_DIGIT", "VARIABLE", "DECIMAL", "BINARY", 
		"OCTAL", "HEX", "CHARACTER_CODE_CONSTANT", "FLOAT", "GRAPHIC_TOKEN", "GRAPHIC", 
		"SINGLE_QUOTED_CHARACTER", "DOUBLE_QUOTED_CHARACTER", "BACK_QUOTED_CHARACTER", 
		"NON_QUOTE_CHAR", "META_ESCAPE", "CONTROL_ESCAPE", "OCTAL_ESCAPE", "HEX_ESCAPE", 
		"QUOTED", "DOUBLE_QUOTED_LIST", "BACK_QUOTED_STRING", "CONTINUATION_ESCAPE", 
		"ALPHANUMERIC", "ALPHA", "SMALL_LETTER", "CAPITAL_LETTER", "DIGIT", "HEX_DIGIT", 
		"SOLO", "WS", "COMMENT", "MULTILINE_COMMENT"
	];


	pub const _LITERAL_NAMES: [Option<&'static str>;53] = [
		None, Some("':-'"), Some("'.'"), Some("';'"), Some("','"), Some("'('"), 
		Some("')'"), Some("'-'"), Some("'['"), Some("'|'"), Some("']'"), Some("'{'"), 
		Some("'}'"), Some("'-->'"), Some("'?-'"), Some("'dynamic'"), Some("'multifile'"), 
		Some("'discontiguous'"), Some("'public'"), Some("'->'"), Some("'div'"), 
		Some("'\\+'"), Some("'='"), Some("'\\='"), Some("'=='"), Some("'\\=='"), 
		Some("'@<'"), Some("'@=<'"), Some("'@>'"), Some("'@>='"), Some("'=..'"), 
		Some("'is'"), Some("'=:='"), Some("'=\\='"), Some("'<'"), Some("'=<'"), 
		Some("'>'"), Some("'>='"), Some("':'"), Some("'+'"), Some("'/\\'"), Some("'\\/'"), 
		Some("'*'"), Some("'/'"), Some("'//'"), Some("'rem'"), Some("'mod'"), 
		Some("'<<'"), Some("'>>'"), Some("'**'"), Some("'^'"), Some("'\\'"), Some("'!'")
	];
	pub const _SYMBOLIC_NAMES: [Option<&'static str>;68]  = [
		None, None, None, None, None, None, None, None, None, None, None, None, 
		None, None, None, None, None, None, None, None, None, None, None, None, 
		None, None, None, None, None, None, None, None, None, None, None, None, 
		None, None, None, None, None, None, None, None, None, None, None, None, 
		None, None, None, None, None, Some("LETTER_DIGIT"), Some("VARIABLE"), 
		Some("DECIMAL"), Some("BINARY"), Some("OCTAL"), Some("HEX"), Some("CHARACTER_CODE_CONSTANT"), 
		Some("FLOAT"), Some("GRAPHIC_TOKEN"), Some("QUOTED"), Some("DOUBLE_QUOTED_LIST"), 
		Some("BACK_QUOTED_STRING"), Some("WS"), Some("COMMENT"), Some("MULTILINE_COMMENT")
	];
	lazy_static!{
	    static ref _shared_context_cache: Arc<PredictionContextCache> = Arc::new(PredictionContextCache::new());
		static ref VOCABULARY: Box<dyn Vocabulary> = Box::new(VocabularyImpl::new(_LITERAL_NAMES.iter(), _SYMBOLIC_NAMES.iter(), None));
	}


pub type LexerContext<'input> = BaseRuleContext<'input,EmptyCustomRuleContext<'input,LocalTokenFactory<'input> >>;
pub type LocalTokenFactory<'input> = CommonTokenFactory;

type From<'a> = <LocalTokenFactory<'a> as TokenFactory<'a> >::From;

pub struct prologLexer<'input, Input:CharStream<From<'input> >> {
	base: BaseLexer<'input,prologLexerActions,Input,LocalTokenFactory<'input>>,
}

antlr4rust::tid! { impl<'input,Input> TidAble<'input> for prologLexer<'input,Input> where Input:CharStream<From<'input> > }

impl<'input, Input:CharStream<From<'input> >> Deref for prologLexer<'input,Input>{
	type Target = BaseLexer<'input,prologLexerActions,Input,LocalTokenFactory<'input>>;

	fn deref(&self) -> &Self::Target {
		&self.base
	}
}

impl<'input, Input:CharStream<From<'input> >> DerefMut for prologLexer<'input,Input>{
	fn deref_mut(&mut self) -> &mut Self::Target {
		&mut self.base
	}
}


impl<'input, Input:CharStream<From<'input> >> prologLexer<'input,Input>{
    fn get_rule_names(&self) -> &'static [&'static str] {
        &ruleNames
    }
    fn get_literal_names(&self) -> &[Option<&str>] {
        &_LITERAL_NAMES
    }

    fn get_symbolic_names(&self) -> &[Option<&str>] {
        &_SYMBOLIC_NAMES
    }

    fn get_grammar_file_name(&self) -> &'static str {
        "prologLexer.g4"
    }

	pub fn new_with_token_factory(input: Input, tf: &'input LocalTokenFactory<'input>) -> Self {
		antlr4rust::recognizer::check_version("0","5");
    	Self {
			base: BaseLexer::new_base_lexer(
				input,
				LexerATNSimulator::new_lexer_atnsimulator(
					_ATN.clone(),
					_decision_to_DFA.clone(),
					_shared_context_cache.clone(),
				),
				prologLexerActions{},
				tf
			)
	    }
	}
}

impl<'input, Input:CharStream<From<'input> >> prologLexer<'input,Input> where &'input LocalTokenFactory<'input>:Default{
	pub fn new(input: Input) -> Self{
		prologLexer::new_with_token_factory(input, <&LocalTokenFactory<'input> as Default>::default())
	}
}

pub struct prologLexerActions {
}

impl prologLexerActions{
}

impl<'input, Input:CharStream<From<'input> >> Actions<'input,BaseLexer<'input,prologLexerActions,Input,LocalTokenFactory<'input>>> for prologLexerActions{
	}

	impl<'input, Input:CharStream<From<'input> >> prologLexer<'input,Input>{

}

impl<'input, Input:CharStream<From<'input> >> LexerRecog<'input,BaseLexer<'input,prologLexerActions,Input,LocalTokenFactory<'input>>> for prologLexerActions{
}
impl<'input> TokenAware<'input> for prologLexerActions{
	type TF = LocalTokenFactory<'input>;
}

impl<'input, Input:CharStream<From<'input> >> TokenSource<'input> for prologLexer<'input,Input>{
	type TF = LocalTokenFactory<'input>;

    fn next_token(&mut self) -> <Self::TF as TokenFactory<'input>>::Tok {
        self.base.next_token()
    }

    fn get_line(&self) -> isize {
        self.base.get_line()
    }

    fn get_char_position_in_line(&self) -> isize {
        self.base.get_char_position_in_line()
    }

    fn get_input_stream(&mut self) -> Option<&mut dyn IntStream> {
        self.base.get_input_stream()
    }

	fn get_source_name(&self) -> String {
		self.base.get_source_name()
	}

    fn get_token_factory(&self) -> &'input Self::TF {
        self.base.get_token_factory()
    }

    fn get_dfa_string(&self) -> String {
        self.base.get_dfa_string()
    }
}


		lazy_static!{
	    static ref _ATN: Arc<ATN> =
	        Arc::new(ATNDeserializer::new(None).deserialize(&mut _serializedATN.iter()));
	    static ref _decision_to_DFA: Arc<Vec<antlr4rust::RwLock<DFA>>> = {
	        let mut dfa = Vec::new();
	        let size = _ATN.decision_to_state.len() as i32;
	        for i in 0..size {
	            dfa.push(DFA::new(
	                _ATN.clone(),
	                _ATN.get_decision_state(i),
	                i,
	            ).into())
	        }
	        Arc::new(dfa)
	    };
		static ref _serializedATN: Vec<i32> = vec![
			4, 0, 67, 560, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 
			2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 
			9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 
			14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 
			19, 2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 
			24, 2, 25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 
			29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 
			34, 2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 
			39, 2, 40, 7, 40, 2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 
			44, 2, 45, 7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 
			49, 2, 50, 7, 50, 2, 51, 7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 
			54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57, 7, 57, 2, 58, 7, 58, 2, 59, 7, 
			59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7, 
			64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67, 2, 68, 7, 68, 2, 69, 7, 
			69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2, 73, 7, 73, 2, 74, 7, 
			74, 2, 75, 7, 75, 2, 76, 7, 76, 2, 77, 7, 77, 2, 78, 7, 78, 2, 79, 7, 
			79, 2, 80, 7, 80, 2, 81, 7, 81, 2, 82, 7, 82, 2, 83, 7, 83, 1, 0, 1, 
			0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 
			1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 11, 
			1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 
			1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 
			1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 
			1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 
			1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 
			1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 
			1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 
			1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 28, 
			1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 
			1, 31, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 
			1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 
			1, 38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 
			1, 42, 1, 42, 1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1, 44, 1, 44, 1, 45, 
			1, 45, 1, 45, 1, 45, 1, 46, 1, 46, 1, 46, 1, 47, 1, 47, 1, 47, 1, 48, 
			1, 48, 1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 
			5, 52, 344, 8, 52, 10, 52, 12, 52, 347, 9, 52, 1, 53, 1, 53, 5, 53, 351, 
			8, 53, 10, 53, 12, 53, 354, 9, 53, 1, 53, 1, 53, 4, 53, 358, 8, 53, 11, 
			53, 12, 53, 359, 1, 53, 3, 53, 363, 8, 53, 1, 54, 4, 54, 366, 8, 54, 
			11, 54, 12, 54, 367, 1, 55, 1, 55, 1, 55, 1, 55, 4, 55, 374, 8, 55, 11, 
			55, 12, 55, 375, 1, 56, 1, 56, 1, 56, 1, 56, 4, 56, 382, 8, 56, 11, 56, 
			12, 56, 383, 1, 57, 1, 57, 1, 57, 1, 57, 4, 57, 390, 8, 57, 11, 57, 12, 
			57, 391, 1, 58, 1, 58, 1, 58, 1, 58, 1, 59, 1, 59, 1, 59, 4, 59, 401, 
			8, 59, 11, 59, 12, 59, 402, 1, 59, 1, 59, 1, 59, 3, 59, 408, 8, 59, 1, 
			60, 1, 60, 4, 60, 412, 8, 60, 11, 60, 12, 60, 413, 1, 61, 3, 61, 417, 
			8, 61, 1, 62, 1, 62, 1, 62, 1, 62, 3, 62, 423, 8, 62, 1, 63, 1, 63, 1, 
			63, 1, 63, 1, 63, 3, 63, 430, 8, 63, 1, 64, 1, 64, 1, 64, 1, 64, 3, 64, 
			436, 8, 64, 1, 65, 1, 65, 1, 65, 1, 65, 1, 65, 1, 65, 1, 65, 1, 65, 3, 
			65, 446, 8, 65, 1, 66, 1, 66, 1, 66, 1, 67, 1, 67, 1, 67, 1, 68, 1, 68, 
			4, 68, 456, 8, 68, 11, 68, 12, 68, 457, 1, 68, 1, 68, 1, 69, 1, 69, 1, 
			69, 1, 69, 4, 69, 466, 8, 69, 11, 69, 12, 69, 467, 1, 69, 1, 69, 1, 70, 
			1, 70, 1, 70, 5, 70, 475, 8, 70, 10, 70, 12, 70, 478, 9, 70, 1, 70, 1, 
			70, 1, 71, 1, 71, 1, 71, 5, 71, 485, 8, 71, 10, 71, 12, 71, 488, 9, 71, 
			1, 71, 1, 71, 1, 72, 1, 72, 1, 72, 5, 72, 495, 8, 72, 10, 72, 12, 72, 
			498, 9, 72, 1, 72, 1, 72, 1, 73, 1, 73, 1, 73, 1, 74, 1, 74, 3, 74, 507, 
			8, 74, 1, 75, 1, 75, 1, 75, 3, 75, 512, 8, 75, 1, 76, 1, 76, 1, 77, 1, 
			77, 1, 78, 1, 78, 1, 79, 1, 79, 1, 80, 3, 80, 523, 8, 80, 1, 81, 4, 81, 
			526, 8, 81, 11, 81, 12, 81, 527, 1, 81, 1, 81, 1, 82, 1, 82, 5, 82, 534, 
			8, 82, 10, 82, 12, 82, 537, 9, 82, 1, 82, 3, 82, 540, 8, 82, 1, 82, 1, 
			82, 1, 83, 1, 83, 1, 83, 1, 83, 1, 83, 5, 83, 549, 8, 83, 10, 83, 12, 
			83, 552, 9, 83, 1, 83, 1, 83, 1, 83, 3, 83, 557, 8, 83, 1, 83, 1, 83, 
			4, 476, 486, 496, 550, 0, 84, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 
			7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 
			16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 
			25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 
			34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 
			43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51, 
			103, 52, 105, 53, 107, 54, 109, 55, 111, 56, 113, 57, 115, 58, 117, 59, 
			119, 60, 121, 61, 123, 0, 125, 0, 127, 0, 129, 0, 131, 0, 133, 0, 135, 
			0, 137, 0, 139, 0, 141, 62, 143, 63, 145, 64, 147, 0, 149, 0, 151, 0, 
			153, 0, 155, 0, 157, 0, 159, 0, 161, 0, 163, 65, 165, 66, 167, 67, 1, 
			0, 17, 1, 0, 48, 49, 1, 0, 48, 55, 1, 0, 48, 57, 2, 0, 69, 69, 101, 101, 
			2, 0, 43, 43, 45, 45, 8, 0, 35, 36, 38, 38, 42, 43, 45, 47, 58, 58, 60, 
			64, 94, 94, 126, 126, 2, 0, 34, 34, 96, 96, 2, 0, 34, 34, 39, 39, 4, 
			0, 34, 34, 39, 39, 92, 92, 96, 96, 6, 0, 97, 98, 102, 102, 110, 110, 
			114, 114, 116, 116, 118, 118, 2, 0, 95, 95, 97, 122, 1, 0, 65, 90, 3, 
			0, 48, 57, 65, 70, 97, 102, 8, 0, 33, 33, 37, 37, 40, 41, 44, 44, 59, 
			59, 91, 91, 93, 93, 123, 125, 3, 0, 9, 10, 13, 13, 32, 32, 2, 0, 10, 
			10, 13, 13, 2, 1, 10, 10, 13, 13, 585, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 
			0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 
			0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 
			19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 
			0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 
			0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 
			41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 
			0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 
			0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 
			63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 
			0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 
			0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 
			85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 
			0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 
			0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 
			0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1, 
			0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117, 1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 
			0, 121, 1, 0, 0, 0, 0, 141, 1, 0, 0, 0, 0, 143, 1, 0, 0, 0, 0, 145, 1, 
			0, 0, 0, 0, 163, 1, 0, 0, 0, 0, 165, 1, 0, 0, 0, 0, 167, 1, 0, 0, 0, 
			1, 169, 1, 0, 0, 0, 3, 172, 1, 0, 0, 0, 5, 174, 1, 0, 0, 0, 7, 176, 1, 
			0, 0, 0, 9, 178, 1, 0, 0, 0, 11, 180, 1, 0, 0, 0, 13, 182, 1, 0, 0, 0, 
			15, 184, 1, 0, 0, 0, 17, 186, 1, 0, 0, 0, 19, 188, 1, 0, 0, 0, 21, 190, 
			1, 0, 0, 0, 23, 192, 1, 0, 0, 0, 25, 194, 1, 0, 0, 0, 27, 198, 1, 0, 
			0, 0, 29, 201, 1, 0, 0, 0, 31, 209, 1, 0, 0, 0, 33, 219, 1, 0, 0, 0, 
			35, 233, 1, 0, 0, 0, 37, 240, 1, 0, 0, 0, 39, 243, 1, 0, 0, 0, 41, 247, 
			1, 0, 0, 0, 43, 250, 1, 0, 0, 0, 45, 252, 1, 0, 0, 0, 47, 255, 1, 0, 
			0, 0, 49, 258, 1, 0, 0, 0, 51, 262, 1, 0, 0, 0, 53, 265, 1, 0, 0, 0, 
			55, 269, 1, 0, 0, 0, 57, 272, 1, 0, 0, 0, 59, 276, 1, 0, 0, 0, 61, 280, 
			1, 0, 0, 0, 63, 283, 1, 0, 0, 0, 65, 287, 1, 0, 0, 0, 67, 291, 1, 0, 
			0, 0, 69, 293, 1, 0, 0, 0, 71, 296, 1, 0, 0, 0, 73, 298, 1, 0, 0, 0, 
			75, 301, 1, 0, 0, 0, 77, 303, 1, 0, 0, 0, 79, 305, 1, 0, 0, 0, 81, 308, 
			1, 0, 0, 0, 83, 311, 1, 0, 0, 0, 85, 313, 1, 0, 0, 0, 87, 315, 1, 0, 
			0, 0, 89, 318, 1, 0, 0, 0, 91, 322, 1, 0, 0, 0, 93, 326, 1, 0, 0, 0, 
			95, 329, 1, 0, 0, 0, 97, 332, 1, 0, 0, 0, 99, 335, 1, 0, 0, 0, 101, 337, 
			1, 0, 0, 0, 103, 339, 1, 0, 0, 0, 105, 341, 1, 0, 0, 0, 107, 362, 1, 
			0, 0, 0, 109, 365, 1, 0, 0, 0, 111, 369, 1, 0, 0, 0, 113, 377, 1, 0, 
			0, 0, 115, 385, 1, 0, 0, 0, 117, 393, 1, 0, 0, 0, 119, 397, 1, 0, 0, 
			0, 121, 411, 1, 0, 0, 0, 123, 416, 1, 0, 0, 0, 125, 422, 1, 0, 0, 0, 
			127, 429, 1, 0, 0, 0, 129, 435, 1, 0, 0, 0, 131, 445, 1, 0, 0, 0, 133, 
			447, 1, 0, 0, 0, 135, 450, 1, 0, 0, 0, 137, 453, 1, 0, 0, 0, 139, 461, 
			1, 0, 0, 0, 141, 471, 1, 0, 0, 0, 143, 481, 1, 0, 0, 0, 145, 491, 1, 
			0, 0, 0, 147, 501, 1, 0, 0, 0, 149, 506, 1, 0, 0, 0, 151, 511, 1, 0, 
			0, 0, 153, 513, 1, 0, 0, 0, 155, 515, 1, 0, 0, 0, 157, 517, 1, 0, 0, 
			0, 159, 519, 1, 0, 0, 0, 161, 522, 1, 0, 0, 0, 163, 525, 1, 0, 0, 0, 
			165, 531, 1, 0, 0, 0, 167, 543, 1, 0, 0, 0, 169, 170, 5, 58, 0, 0, 170, 
			171, 5, 45, 0, 0, 171, 2, 1, 0, 0, 0, 172, 173, 5, 46, 0, 0, 173, 4, 
			1, 0, 0, 0, 174, 175, 5, 59, 0, 0, 175, 6, 1, 0, 0, 0, 176, 177, 5, 44, 
			0, 0, 177, 8, 1, 0, 0, 0, 178, 179, 5, 40, 0, 0, 179, 10, 1, 0, 0, 0, 
			180, 181, 5, 41, 0, 0, 181, 12, 1, 0, 0, 0, 182, 183, 5, 45, 0, 0, 183, 
			14, 1, 0, 0, 0, 184, 185, 5, 91, 0, 0, 185, 16, 1, 0, 0, 0, 186, 187, 
			5, 124, 0, 0, 187, 18, 1, 0, 0, 0, 188, 189, 5, 93, 0, 0, 189, 20, 1, 
			0, 0, 0, 190, 191, 5, 123, 0, 0, 191, 22, 1, 0, 0, 0, 192, 193, 5, 125, 
			0, 0, 193, 24, 1, 0, 0, 0, 194, 195, 5, 45, 0, 0, 195, 196, 5, 45, 0, 
			0, 196, 197, 5, 62, 0, 0, 197, 26, 1, 0, 0, 0, 198, 199, 5, 63, 0, 0, 
			199, 200, 5, 45, 0, 0, 200, 28, 1, 0, 0, 0, 201, 202, 5, 100, 0, 0, 202, 
			203, 5, 121, 0, 0, 203, 204, 5, 110, 0, 0, 204, 205, 5, 97, 0, 0, 205, 
			206, 5, 109, 0, 0, 206, 207, 5, 105, 0, 0, 207, 208, 5, 99, 0, 0, 208, 
			30, 1, 0, 0, 0, 209, 210, 5, 109, 0, 0, 210, 211, 5, 117, 0, 0, 211, 
			212, 5, 108, 0, 0, 212, 213, 5, 116, 0, 0, 213, 214, 5, 105, 0, 0, 214, 
			215, 5, 102, 0, 0, 215, 216, 5, 105, 0, 0, 216, 217, 5, 108, 0, 0, 217, 
			218, 5, 101, 0, 0, 218, 32, 1, 0, 0, 0, 219, 220, 5, 100, 0, 0, 220, 
			221, 5, 105, 0, 0, 221, 222, 5, 115, 0, 0, 222, 223, 5, 99, 0, 0, 223, 
			224, 5, 111, 0, 0, 224, 225, 5, 110, 0, 0, 225, 226, 5, 116, 0, 0, 226, 
			227, 5, 105, 0, 0, 227, 228, 5, 103, 0, 0, 228, 229, 5, 117, 0, 0, 229, 
			230, 5, 111, 0, 0, 230, 231, 5, 117, 0, 0, 231, 232, 5, 115, 0, 0, 232, 
			34, 1, 0, 0, 0, 233, 234, 5, 112, 0, 0, 234, 235, 5, 117, 0, 0, 235, 
			236, 5, 98, 0, 0, 236, 237, 5, 108, 0, 0, 237, 238, 5, 105, 0, 0, 238, 
			239, 5, 99, 0, 0, 239, 36, 1, 0, 0, 0, 240, 241, 5, 45, 0, 0, 241, 242, 
			5, 62, 0, 0, 242, 38, 1, 0, 0, 0, 243, 244, 5, 100, 0, 0, 244, 245, 5, 
			105, 0, 0, 245, 246, 5, 118, 0, 0, 246, 40, 1, 0, 0, 0, 247, 248, 5, 
			92, 0, 0, 248, 249, 5, 43, 0, 0, 249, 42, 1, 0, 0, 0, 250, 251, 5, 61, 
			0, 0, 251, 44, 1, 0, 0, 0, 252, 253, 5, 92, 0, 0, 253, 254, 5, 61, 0, 
			0, 254, 46, 1, 0, 0, 0, 255, 256, 5, 61, 0, 0, 256, 257, 5, 61, 0, 0, 
			257, 48, 1, 0, 0, 0, 258, 259, 5, 92, 0, 0, 259, 260, 5, 61, 0, 0, 260, 
			261, 5, 61, 0, 0, 261, 50, 1, 0, 0, 0, 262, 263, 5, 64, 0, 0, 263, 264, 
			5, 60, 0, 0, 264, 52, 1, 0, 0, 0, 265, 266, 5, 64, 0, 0, 266, 267, 5, 
			61, 0, 0, 267, 268, 5, 60, 0, 0, 268, 54, 1, 0, 0, 0, 269, 270, 5, 64, 
			0, 0, 270, 271, 5, 62, 0, 0, 271, 56, 1, 0, 0, 0, 272, 273, 5, 64, 0, 
			0, 273, 274, 5, 62, 0, 0, 274, 275, 5, 61, 0, 0, 275, 58, 1, 0, 0, 0, 
			276, 277, 5, 61, 0, 0, 277, 278, 5, 46, 0, 0, 278, 279, 5, 46, 0, 0, 
			279, 60, 1, 0, 0, 0, 280, 281, 5, 105, 0, 0, 281, 282, 5, 115, 0, 0, 
			282, 62, 1, 0, 0, 0, 283, 284, 5, 61, 0, 0, 284, 285, 5, 58, 0, 0, 285, 
			286, 5, 61, 0, 0, 286, 64, 1, 0, 0, 0, 287, 288, 5, 61, 0, 0, 288, 289, 
			5, 92, 0, 0, 289, 290, 5, 61, 0, 0, 290, 66, 1, 0, 0, 0, 291, 292, 5, 
			60, 0, 0, 292, 68, 1, 0, 0, 0, 293, 294, 5, 61, 0, 0, 294, 295, 5, 60, 
			0, 0, 295, 70, 1, 0, 0, 0, 296, 297, 5, 62, 0, 0, 297, 72, 1, 0, 0, 0, 
			298, 299, 5, 62, 0, 0, 299, 300, 5, 61, 0, 0, 300, 74, 1, 0, 0, 0, 301, 
			302, 5, 58, 0, 0, 302, 76, 1, 0, 0, 0, 303, 304, 5, 43, 0, 0, 304, 78, 
			1, 0, 0, 0, 305, 306, 5, 47, 0, 0, 306, 307, 5, 92, 0, 0, 307, 80, 1, 
			0, 0, 0, 308, 309, 5, 92, 0, 0, 309, 310, 5, 47, 0, 0, 310, 82, 1, 0, 
			0, 0, 311, 312, 5, 42, 0, 0, 312, 84, 1, 0, 0, 0, 313, 314, 5, 47, 0, 
			0, 314, 86, 1, 0, 0, 0, 315, 316, 5, 47, 0, 0, 316, 317, 5, 47, 0, 0, 
			317, 88, 1, 0, 0, 0, 318, 319, 5, 114, 0, 0, 319, 320, 5, 101, 0, 0, 
			320, 321, 5, 109, 0, 0, 321, 90, 1, 0, 0, 0, 322, 323, 5, 109, 0, 0, 
			323, 324, 5, 111, 0, 0, 324, 325, 5, 100, 0, 0, 325, 92, 1, 0, 0, 0, 
			326, 327, 5, 60, 0, 0, 327, 328, 5, 60, 0, 0, 328, 94, 1, 0, 0, 0, 329, 
			330, 5, 62, 0, 0, 330, 331, 5, 62, 0, 0, 331, 96, 1, 0, 0, 0, 332, 333, 
			5, 42, 0, 0, 333, 334, 5, 42, 0, 0, 334, 98, 1, 0, 0, 0, 335, 336, 5, 
			94, 0, 0, 336, 100, 1, 0, 0, 0, 337, 338, 5, 92, 0, 0, 338, 102, 1, 0, 
			0, 0, 339, 340, 5, 33, 0, 0, 340, 104, 1, 0, 0, 0, 341, 345, 3, 153, 
			76, 0, 342, 344, 3, 149, 74, 0, 343, 342, 1, 0, 0, 0, 344, 347, 1, 0, 
			0, 0, 345, 343, 1, 0, 0, 0, 345, 346, 1, 0, 0, 0, 346, 106, 1, 0, 0, 
			0, 347, 345, 1, 0, 0, 0, 348, 352, 3, 155, 77, 0, 349, 351, 3, 149, 74, 
			0, 350, 349, 1, 0, 0, 0, 351, 354, 1, 0, 0, 0, 352, 350, 1, 0, 0, 0, 
			352, 353, 1, 0, 0, 0, 353, 363, 1, 0, 0, 0, 354, 352, 1, 0, 0, 0, 355, 
			357, 5, 95, 0, 0, 356, 358, 3, 149, 74, 0, 357, 356, 1, 0, 0, 0, 358, 
			359, 1, 0, 0, 0, 359, 357, 1, 0, 0, 0, 359, 360, 1, 0, 0, 0, 360, 363, 
			1, 0, 0, 0, 361, 363, 5, 95, 0, 0, 362, 348, 1, 0, 0, 0, 362, 355, 1, 
			0, 0, 0, 362, 361, 1, 0, 0, 0, 363, 108, 1, 0, 0, 0, 364, 366, 3, 157, 
			78, 0, 365, 364, 1, 0, 0, 0, 366, 367, 1, 0, 0, 0, 367, 365, 1, 0, 0, 
			0, 367, 368, 1, 0, 0, 0, 368, 110, 1, 0, 0, 0, 369, 370, 5, 48, 0, 0, 
			370, 371, 5, 98, 0, 0, 371, 373, 1, 0, 0, 0, 372, 374, 7, 0, 0, 0, 373, 
			372, 1, 0, 0, 0, 374, 375, 1, 0, 0, 0, 375, 373, 1, 0, 0, 0, 375, 376, 
			1, 0, 0, 0, 376, 112, 1, 0, 0, 0, 377, 378, 5, 48, 0, 0, 378, 379, 5, 
			111, 0, 0, 379, 381, 1, 0, 0, 0, 380, 382, 7, 1, 0, 0, 381, 380, 1, 0, 
			0, 0, 382, 383, 1, 0, 0, 0, 383, 381, 1, 0, 0, 0, 383, 384, 1, 0, 0, 
			0, 384, 114, 1, 0, 0, 0, 385, 386, 5, 48, 0, 0, 386, 387, 5, 120, 0, 
			0, 387, 389, 1, 0, 0, 0, 388, 390, 3, 159, 79, 0, 389, 388, 1, 0, 0, 
			0, 390, 391, 1, 0, 0, 0, 391, 389, 1, 0, 0, 0, 391, 392, 1, 0, 0, 0, 
			392, 116, 1, 0, 0, 0, 393, 394, 5, 48, 0, 0, 394, 395, 5, 39, 0, 0, 395, 
			396, 3, 125, 62, 0, 396, 118, 1, 0, 0, 0, 397, 398, 3, 109, 54, 0, 398, 
			400, 5, 46, 0, 0, 399, 401, 7, 2, 0, 0, 400, 399, 1, 0, 0, 0, 401, 402, 
			1, 0, 0, 0, 402, 400, 1, 0, 0, 0, 402, 403, 1, 0, 0, 0, 403, 407, 1, 
			0, 0, 0, 404, 405, 7, 3, 0, 0, 405, 406, 7, 4, 0, 0, 406, 408, 3, 109, 
			54, 0, 407, 404, 1, 0, 0, 0, 407, 408, 1, 0, 0, 0, 408, 120, 1, 0, 0, 
			0, 409, 412, 3, 123, 61, 0, 410, 412, 5, 92, 0, 0, 411, 409, 1, 0, 0, 
			0, 411, 410, 1, 0, 0, 0, 412, 413, 1, 0, 0, 0, 413, 411, 1, 0, 0, 0, 
			413, 414, 1, 0, 0, 0, 414, 122, 1, 0, 0, 0, 415, 417, 7, 5, 0, 0, 416, 
			415, 1, 0, 0, 0, 417, 124, 1, 0, 0, 0, 418, 423, 3, 131, 65, 0, 419, 
			420, 5, 39, 0, 0, 420, 423, 5, 39, 0, 0, 421, 423, 7, 6, 0, 0, 422, 418, 
			1, 0, 0, 0, 422, 419, 1, 0, 0, 0, 422, 421, 1, 0, 0, 0, 423, 126, 1, 
			0, 0, 0, 424, 430, 3, 131, 65, 0, 425, 430, 5, 39, 0, 0, 426, 427, 5, 
			34, 0, 0, 427, 430, 5, 34, 0, 0, 428, 430, 5, 96, 0, 0, 429, 424, 1, 
			0, 0, 0, 429, 425, 1, 0, 0, 0, 429, 426, 1, 0, 0, 0, 429, 428, 1, 0, 
			0, 0, 430, 128, 1, 0, 0, 0, 431, 436, 3, 131, 65, 0, 432, 436, 7, 7, 
			0, 0, 433, 434, 5, 96, 0, 0, 434, 436, 5, 96, 0, 0, 435, 431, 1, 0, 0, 
			0, 435, 432, 1, 0, 0, 0, 435, 433, 1, 0, 0, 0, 436, 130, 1, 0, 0, 0, 
			437, 446, 3, 123, 61, 0, 438, 446, 3, 149, 74, 0, 439, 446, 3, 161, 80, 
			0, 440, 446, 5, 32, 0, 0, 441, 446, 3, 133, 66, 0, 442, 446, 3, 135, 
			67, 0, 443, 446, 3, 137, 68, 0, 444, 446, 3, 139, 69, 0, 445, 437, 1, 
			0, 0, 0, 445, 438, 1, 0, 0, 0, 445, 439, 1, 0, 0, 0, 445, 440, 1, 0, 
			0, 0, 445, 441, 1, 0, 0, 0, 445, 442, 1, 0, 0, 0, 445, 443, 1, 0, 0, 
			0, 445, 444, 1, 0, 0, 0, 446, 132, 1, 0, 0, 0, 447, 448, 5, 92, 0, 0, 
			448, 449, 7, 8, 0, 0, 449, 134, 1, 0, 0, 0, 450, 451, 5, 92, 0, 0, 451, 
			452, 7, 9, 0, 0, 452, 136, 1, 0, 0, 0, 453, 455, 5, 92, 0, 0, 454, 456, 
			7, 1, 0, 0, 455, 454, 1, 0, 0, 0, 456, 457, 1, 0, 0, 0, 457, 455, 1, 
			0, 0, 0, 457, 458, 1, 0, 0, 0, 458, 459, 1, 0, 0, 0, 459, 460, 5, 92, 
			0, 0, 460, 138, 1, 0, 0, 0, 461, 462, 5, 92, 0, 0, 462, 463, 5, 120, 
			0, 0, 463, 465, 1, 0, 0, 0, 464, 466, 3, 159, 79, 0, 465, 464, 1, 0, 
			0, 0, 466, 467, 1, 0, 0, 0, 467, 465, 1, 0, 0, 0, 467, 468, 1, 0, 0, 
			0, 468, 469, 1, 0, 0, 0, 469, 470, 5, 92, 0, 0, 470, 140, 1, 0, 0, 0, 
			471, 476, 5, 39, 0, 0, 472, 475, 3, 147, 73, 0, 473, 475, 3, 125, 62, 
			0, 474, 472, 1, 0, 0, 0, 474, 473, 1, 0, 0, 0, 475, 478, 1, 0, 0, 0, 
			476, 477, 1, 0, 0, 0, 476, 474, 1, 0, 0, 0, 477, 479, 1, 0, 0, 0, 478, 
			476, 1, 0, 0, 0, 479, 480, 5, 39, 0, 0, 480, 142, 1, 0, 0, 0, 481, 486, 
			5, 34, 0, 0, 482, 485, 3, 147, 73, 0, 483, 485, 3, 127, 63, 0, 484, 482, 
			1, 0, 0, 0, 484, 483, 1, 0, 0, 0, 485, 488, 1, 0, 0, 0, 486, 487, 1, 
			0, 0, 0, 486, 484, 1, 0, 0, 0, 487, 489, 1, 0, 0, 0, 488, 486, 1, 0, 
			0, 0, 489, 490, 5, 34, 0, 0, 490, 144, 1, 0, 0, 0, 491, 496, 5, 96, 0, 
			0, 492, 495, 3, 147, 73, 0, 493, 495, 3, 129, 64, 0, 494, 492, 1, 0, 
			0, 0, 494, 493, 1, 0, 0, 0, 495, 498, 1, 0, 0, 0, 496, 497, 1, 0, 0, 
			0, 496, 494, 1, 0, 0, 0, 497, 499, 1, 0, 0, 0, 498, 496, 1, 0, 0, 0, 
			499, 500, 5, 96, 0, 0, 500, 146, 1, 0, 0, 0, 501, 502, 5, 92, 0, 0, 502, 
			503, 5, 10, 0, 0, 503, 148, 1, 0, 0, 0, 504, 507, 3, 151, 75, 0, 505, 
			507, 3, 157, 78, 0, 506, 504, 1, 0, 0, 0, 506, 505, 1, 0, 0, 0, 507, 
			150, 1, 0, 0, 0, 508, 512, 5, 95, 0, 0, 509, 512, 3, 153, 76, 0, 510, 
			512, 3, 155, 77, 0, 511, 508, 1, 0, 0, 0, 511, 509, 1, 0, 0, 0, 511, 
			510, 1, 0, 0, 0, 512, 152, 1, 0, 0, 0, 513, 514, 7, 10, 0, 0, 514, 154, 
			1, 0, 0, 0, 515, 516, 7, 11, 0, 0, 516, 156, 1, 0, 0, 0, 517, 518, 7, 
			2, 0, 0, 518, 158, 1, 0, 0, 0, 519, 520, 7, 12, 0, 0, 520, 160, 1, 0, 
			0, 0, 521, 523, 7, 13, 0, 0, 522, 521, 1, 0, 0, 0, 523, 162, 1, 0, 0, 
			0, 524, 526, 7, 14, 0, 0, 525, 524, 1, 0, 0, 0, 526, 527, 1, 0, 0, 0, 
			527, 525, 1, 0, 0, 0, 527, 528, 1, 0, 0, 0, 528, 529, 1, 0, 0, 0, 529, 
			530, 6, 81, 0, 0, 530, 164, 1, 0, 0, 0, 531, 535, 5, 37, 0, 0, 532, 534, 
			8, 15, 0, 0, 533, 532, 1, 0, 0, 0, 534, 537, 1, 0, 0, 0, 535, 533, 1, 
			0, 0, 0, 535, 536, 1, 0, 0, 0, 536, 539, 1, 0, 0, 0, 537, 535, 1, 0, 
			0, 0, 538, 540, 7, 16, 0, 0, 539, 538, 1, 0, 0, 0, 540, 541, 1, 0, 0, 
			0, 541, 542, 6, 82, 1, 0, 542, 166, 1, 0, 0, 0, 543, 544, 5, 47, 0, 0, 
			544, 545, 5, 42, 0, 0, 545, 550, 1, 0, 0, 0, 546, 549, 3, 167, 83, 0, 
			547, 549, 9, 0, 0, 0, 548, 546, 1, 0, 0, 0, 548, 547, 1, 0, 0, 0, 549, 
			552, 1, 0, 0, 0, 550, 551, 1, 0, 0, 0, 550, 548, 1, 0, 0, 0, 551, 556, 
			1, 0, 0, 0, 552, 550, 1, 0, 0, 0, 553, 554, 5, 42, 0, 0, 554, 557, 5, 
			47, 0, 0, 555, 557, 5, 0, 0, 1, 556, 553, 1, 0, 0, 0, 556, 555, 1, 0, 
			0, 0, 557, 558, 1, 0, 0, 0, 558, 559, 6, 83, 1, 0, 559, 168, 1, 0, 0, 
			0, 35, 0, 345, 352, 359, 362, 367, 375, 383, 391, 402, 407, 411, 413, 
			416, 422, 429, 435, 445, 457, 467, 474, 476, 484, 486, 494, 496, 506, 
			511, 522, 527, 535, 539, 548, 550, 556, 2, 6, 0, 0, 0, 1, 0
		];
	}